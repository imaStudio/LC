class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> solution = new ArrayList<>();
        int left,right;
        Arrays.sort(nums);
        for(int i=0;i<nums.length;i++){
            if(i-1>=0&&nums[i]==nums[i-1])
                continue;
            left=i+1;
            right=nums.length-1;
            while(left<right){
                if(nums[i]+nums[left]+nums[right]==0){
                    List<Integer> res = new ArrayList<>();
                    
                    
                    int[] noDup = new int[3];
                    noDup[0]=nums[i];noDup[1]=nums[left];noDup[2]=nums[right];
                    Arrays.sort(noDup);
                    for(int k=0;k<3;k++)
                        res.add(noDup[k]);
                        
                    
                    solution.add(res);
                    //跳过重复的left和right，下同
                    while(left+1<right&&nums[left]==nums[left+1]) left++;
                    left++;
                    while(right-1>left&&nums[right]==nums[right-1]) right--;
                    right--;
                }
                else if(nums[i]+nums[left]+nums[right]<0){
                    while(left+1<right&&nums[left]==nums[left+1]) left++;
                    left++;
                }
                else if(nums[i]+nums[left]+nums[right]>0){
                    while(right-1>left&&nums[right]==nums[right-1]) right--;
                    right--;
                }
            }
        }
        return solution;
    }
}
